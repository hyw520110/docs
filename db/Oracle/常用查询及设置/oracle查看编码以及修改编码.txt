oracle的编码一直是个很重要的问题，以前也总结的写过，但都忘了，今天再在这写一下。
export NLS_LANG="AMERICAN_AMERICA.ZHS16GBK"
首先查看oracle数据库的编码

SQL> select * from nls_database_parameters where parameter ='NLS_CHARACTERSET';

PARAMETER
--------------------
VALUE
--------------------
NLS_CHARACTERSET
AL32UTF8

这其来源于props$，这是表示数据库的字符集。

oracle客户端编码

SQL> select * from nls_instance_parameters where parameter='NLS_LANGUAGE';

PARAMETER
--------------------
VALUE
--------------------
NLS_LANGUAGE
SIMPLIFIED CHINESE

其来源于v$parameter，表示客户端的字符集的设置，可能是参数文件，环境变量或者是注册表会话字符集环境

select * from nls_session_parameters，其来源于v$nls_parameters，表示会话自己的设置，可能是会话的环境变量或者是alter session完成，如果会话没有特殊的设置，将与nls_instance_parameters一致。

再来说一下怎么修改oracle的字符集：

目前我的数据库环境的字符集是AL32UTF8，那么把它改成ZHS16GBK

1.首先以sysdba的身份登录上去 :
sqlplus "user/pass as sysdba"
or
sqlplus /nolog
Connect user/pass as sysdba


2.关闭数据库shutdown immediate;

3.以mount打来数据库，startup mount

4.设置session 

 SQL>ALTER SYSTEM ENABLE RESTRICTED SESSION;
SQL> ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0;
SQL> ALTER SYSTEM SET AQ_TM_PROCESSES=0;

5.启动数据库

alter database open;

6.修改字符集

ALTER DATABASE CHARACTER SET ZHS16GBK;

这会可能会报错，提示我们的字符集：新字符集必须为旧字符集的超集，这时我们可以跳过超集的检查做更改：

 ALTER DATABASE character set INTERNAL_USE ZHS16GBK;

这条语句就可以了，TERNAL_USE提供的帮助就会使oracle绕过了子集与超集的验证，这条语句和上面的语句内部操作时完全相同的。

7.关闭，重新启动

SQL>shutdown immediate;
SQL> startup

当然字符集最好不要轻易修改，因为这会对数据库的数据有直接的影响，如果是生产环境的话，可能会造成不可估计得损失。