#!/bin/sh
#MySQL-Proxy实际上非常不稳定，在高并发或有错误连接的情况下，进程很容易自动关闭，因此打开keepalive参数让进程自动恢复是个比较好的办法.
#mysql proxy还忽略了一些字符设定，如果数据库不是同一编码还会出现乱码,amoeba就不存在
#建议用Amoeba for MySQL 来替代MySQL-Proxy,同样可以实现读写分离，负载均衡等功能，并且稳定性要大大超过MySQL-Proxy,功能强大、无需编写脚本、简单配置即可。缺点不支持事务
# mysql-proxy This script starts and stops the mysql-proxy daemon
# chkconfig: - 78 30
# processname: mysql-proxy
# description: mysql-proxy is a proxy daemon to mysql
. /etc/rc.d/init.d/functions

#cp mysql-proxy /usr/mysql-proxy/init.d/
#chmod +x /usr/mysql-proxy/init.d/mysql-proxy
mkdir /usr/mysql-proxy/run
mkdir /usr/mysql-proxy/log
mkdir /usr/mysql-proxy/scripts


#定义mysql-proxy服务二进制文件路径
PROXY_PATH=/usr/mysql-proxy/bin
prog="mysql-proxy"
# Source networking configuration.
. /etc/sysconfig/network
# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0
# Set default mysql-proxy configuration.
#PROXY_OPTIONS="--daemon"
#rw-splitting.lua默认最小4个最大8个以上的客户端连接才会实现读写分离, 现改为最小min_idle_connections1个最大max_idle_connections2个
PROXY_OPTIONS="--admin-username=root --admin-password=password --proxy-read-only-backend-addresses=192.168.2.63:3307 --proxy-backend-addresses=192.168.2.210:3306  --admin-lua-script=/usr/mysql-proxy/lib/mysql-proxy/lua/admin.lua --proxy-lua-script=/usr/mysql-proxy/scripts/rw-splitting.lua"
PROXY_PID=/usr/mysql-proxy/run/mysql-proxy.pid 


# Source mysql-proxy configuration.
if [ -f /etc/sysconfig/mysql-proxy ]; then
        . /etc/sysconfig/mysql-proxy
fi
PATH=$PATH:/usr/bin:/usr/local/bin:$PROXY_PATH
# By default it's all good
RETVAL=0
# See how we were called.
case "$1" in
  start)
        # Start daemon.
        echo -n $"Starting $prog: "
        $NICELEVEL $PROXY_PATH/mysql-proxy $PROXY_OPTIONS --daemon --pid-file=$PROXY_PID --user=mysql --log-level=warning --log-file=/usr/mysql-proxy/log/mysql-proxy.log
        RETVAL=$?
        echo
        if [ $RETVAL = 0 ]; then
                touch /var/lock/subsys/mysql-proxy
        fi
       ;;
  stop)
        # Stop daemons.
        echo -n $"Stopping $prog: "
        killproc $prog
        RETVAL=$?
        echo
        if [ $RETVAL = 0 ]; then
                rm -f /var/lock/subsys/mysql-proxy
                rm -f $PROXY_PID
        fi
       ;;
  restart)
        $0 stop
        sleep 3
        $0 start
       ;;
  condrestart)
       [ -e /var/lock/subsys/mysql-proxy ] && $0 restart
      ;;
  status)
        status mysql-proxy
        RETVAL=$?
       ;;
  *)
        echo "Usage: $0 {start|stop|restart|status|condrestart}"
        RETVAL=1
       ;;
esac
 
exit $RETVAL